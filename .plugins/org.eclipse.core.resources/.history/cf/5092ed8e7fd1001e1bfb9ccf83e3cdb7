package api.tests;

import java.util.HashSet;
import java.util.Set;

import org.testng.Assert;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import com.github.javafaker.Faker;

import api.Payload.User;
import api.endPoints.UserEndPoints;
import io.restassured.response.Response;

public class UserTests {

	Faker faker;
	User payLoad;

	@BeforeClass
	public void setup() {

		faker = new Faker();
		payLoad = new User(); // Initialize payLoad before setting its properties

		
//
//			payLoad.setId(faker.random().nextInt(15054, 98541));
//			payLoad.setEmployee_name(faker.name().username());
//			payLoad.setEmployee_salary(faker.number().numberBetween(150000, 350000));
//			payLoad.setEmployee_age(faker.number().numberBetween(20, 50));
		}
	

	@Test(priority = 1)
	public void getUsers() {
		Response response = UserEndPoints.getUser();
		response.then().log().all();
		// Assert.assertEquals(response.getStatusCode(), 200);
		System.out.println("########################Get");
	}

	@Test(priority = 2)
	public void postUsers() {
		Response response = UserEndPoints.createUser(payLoad);
		response.then().log().all();
		Assert.assertEquals(response.getStatusCode(), 200);
		System.out.println("########################Post");
	}

	@Test(priority = 3)
	public void updateUsers() {
//
//		payLoad.setEmployee_name(faker.name().username());
//		payLoad.setEmployee_salary(faker.number().numberBetween(150000, 350000));
//		payLoad.setEmployee_age(faker.number().numberBetween(20, 50));

	//	Response response = UserEndPoints.updateUser(payLoad, this.payLoad.getId()); // Corrected this.payLoad.getId() to
																				// payLoad.getId()
		//response.then().log().body();
		// Assert.assertEquals(response.getStatusCode(), 200);
		System.out.println("########################Put");
	}

	@Test(priority = 4)
	public void deleteUsers() {
	//	Response response = UserEndPoints.deleteUser(payLoad.getId()); // Corrected this.payLoad.getId() to
																		// payLoad.getId()
		//response.then().log().all();
	}
}
